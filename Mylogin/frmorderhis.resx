<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Guna2BorderlessForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox8.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA8dJREFUaEPtWUtPU0EUrhsf8ZEoQuc2RBMlaty5MXHhO/wCl6AxkhBI+A8SXSDs
        2QOJiXEJpMCK2HvLm50P3LhxJ7rCqO29cfzO5UDmTmup05lSYr/kpMn95p5vzsw5M3OnqSaaaEDIN2e9
        yPd6wsCbiAKxHvria+h7xdgCsRkF3hq48cjPPJHzrYJfaxyEfvoOAphGJyN0VlZjaBvid6qYF7fYzf5B
        LrR3RL6Y1TtpYFkZtF5kt/UFAniEUf1eplNGBl9bSMdudl8fQPRZuc6QoR7eox6Gwlzmvgwyl+Vc+nhs
        ee8KPQP3ArXzody7ZHh/kGXcAkE8L9cB1MhyGKTvcrM9UQwyNzADfjlfzoOhdCoVFQUE0Stl6hA3qxr0
        DoLpi31ofmFd3MwuqLD1mqDltRh4N7mJMWjlgq9vCd+oGem3XeAm9qCvTjSKNoLYQTEnbtN+o2rQks60
        HcT7hCqwLdLLtDUgzfp1HZuDhdnwpjWBJZOa2AtxzfjeSlJLTDJdG+jYgXylXXjXOaUB09ZBK5+qRdpy
        sS3NtDkwQj2a43dMOQPqb0PVjIL0Y6bMgY7jAKgGIoaYcgYEMpzU9MaYMgdydD3hFLszU86A1atT1URW
        rDJlDtorVKcyl7nElDPQ0UbVxIx8YcoctF+oTvEdcYIpZyANVRPp/Ispc5QEErScZMoZ5NKZU6omZmSL
        KXM0SGp9YsoccLSWcLofxR54i0yZA6Mxrjql7wmmnAGBjCQ1vVGmzFGyIeKjiClnwGB9TGgG4gFT5qDb
        DoxI4ohCh0imrYNSN6klCnI508J0bYDDKdU5ZmnZ2aFRr0mkNtO1gz58VOfbJvqYtgYM0ICuU8hnrjFt
        B3CaVQXoI8jmnRSdevUPK9TGS6btge6dMM1bCSF8nto40lPNka+E70Bsypxo5SZ2gXTqVsViwXgURb9J
        zfCH1IA+E7H5IiffXj3MTe0DooMlorGwtxrm0/e42Z7g1SlR2GUsK+fPH+VX7OOvwcCQIhuwYbTppEs5
        OgDGRhd0eAYb0feJyiYmnc4MRLr0mnFoUzLbcYSl7YPunZBS+sXEPxlm6Dd+X6Mm5nROM7fBEOjKhlJA
        PwFUMqTXT6Tgq+JC+jr5oFrA8xm9XcIwaM6DIdBtB10UIKCxuPixhKKzBdgP2Gc8WwE3GuXEQ+mfO82v
        7aKhgqkVVNjocPJIVGozTlczW6gqGF/MNoOpN/7HYObkQvsxfqVxUdVqVu//H01ReWbEU252MFA+mAMW
        xA6SwRzQIHbANePmz9ImmqiEVOoP6plD/FbxJiYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="picImg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAeZJREFUaEPtlz1KBEEQRscfMDMSI72CqZmpF/AA3sFAb2CgGAgamQiCmRiImaGs
        Cl5DI0Ezwd+vBguK5puermV3phZ88GCmuvvNLrguW/0zQfwE1Q2LRNANi0TQDYtE0A2LRNANi0TQDYtE
        0A2LRNANi0TQDYtYxwV7ltUNi1jHBXuW1Q2LRNANi0TQDYtE0A2LRNANi0TQDYtE0A2LRNANi0TQDYtE
        0A2LRNANi0TQDYtYU3JrHmyH6YZFrCm5NQ+2w3TDIhF0wyIRdMMiEXTDIhF0wyLWlNxajgdozw7jHWyE
        HbCm5NZy3EN7dhgHsBF2oAtLKd5v411aSvF+G+/SUor323iXLkLhCaZrMhOWody/1nctpJHUlNxaCRdQ
        zp7Ud1W1Cb+gNuVaZsI+lNl1fdeCBppMya2VsALfoZzfg1NwHT7+KdfCNvyGH3BVBm3YF9aH53AOKnJ9
        CmVN3vAGLCIN9+ENVC6hzF7gmgxKSaN9KF+WyhmU2cS9kSs4D5UZeAhlbWL+tA6gvHDGFpQP+ycM/WE/
        hm3sQtk7kn+/43IBKrPw6E+5Vpag7H2r71pIH9CVyjTUL0lRrmWmpPsb0Y1dq+zAdE1mis5asYEuVZ5h
        uiYzRWdhGMUvxFvYOyP4hVgNfgGlATwpANc79QAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="Guna2ContextMenuStrip2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>566, 17</value>
  </metadata>
</root>